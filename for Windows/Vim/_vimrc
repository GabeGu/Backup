set nocompatible
source $VIMRUNTIME/vimrc_example.vim
source $VIMRUNTIME/mswin.vim
behave mswin

set diffexpr=MyDiff()
function MyDiff()
  let opt = '-a --binary '
  if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
  if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
  let arg1 = v:fname_in
  if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif
  let arg2 = v:fname_new
  if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
  let arg3 = v:fname_out
  if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
  let eq = ''
  if $VIMRUNTIME =~ ' '
    if &sh =~ '\<cmd'
      let cmd = '""' . $VIMRUNTIME . '\diff"'
      let eq = '"'
    else
      let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'
    endif
  else
    let cmd = $VIMRUNTIME . '\diff'
  endif
  silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3 . eq
endfunction

set autoindent                  " 打开自动缩进
set shiftwidth=4                " 自动缩进4个空格

set tabstop=4                   " Tab宽度等于4个空格的宽度
set expandtab                   " Tab用空格替换

set cursorline                  " 突出显示当前行
set nu!                         " 显示行号
set showmatch                   " 显示括号配对情况

set foldmethod=indent           " 更多的缩进标识更高级的折叠
set foldlevel=100               " 禁止自动折叠

set guifont=Consolas:h11    " 字体 && 字号
colorscheme desert              " desert配色方案
syntax enable                   " 语法高亮
syntax on                       " 开启文件类型侦测
set nobackup                    " 无备份文件

set laststatus=2                " 开启状态栏信息
set iskeyword+=.                "set . as a word


" 每行超过80个的字符用下划线标示
au BufRead,BufNewFile *.h,*.asm,*.c,*.cpp,*.java,*.cs,*.sh,*.lua,*.pl,*.pm,*.py,*.rb,*.hs,*.vim 2match Underlined /.\%82v/

" 设置编码
set fenc=utf-8
"set fileencoding=utf-8
set encoding=utf-8
set fileencodings=utf-8,gbk,cp936,latin-1
"set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1
"set fileencoding=utf-8
"set encoding=utf-8


" 解决菜单乱码
source $VIMRUNTIME/delmenu.vim
source $VIMRUNTIME/menu.vim

" 解决consle输出乱码
language messages zh_CN.utf-8

"进行版权声明的设置
"添加或更新头
map <F4> :call TitleDet()<cr>'s
function AddTitle()
    call append(0,"/*============================================
							\=================================")
    call append(1,"#")
    call append(2,"# Filename: ".expand("%:t"))
    call append(3,"#")
    call append(4,"# Description: ")
    call append(5,"#")
    call append(6,"# Version: ")
    call append(7,"#")
    call append(8,"# Last modified: ".strftime("%Y-%m-%d %H:%M"))
    call append(9,"#")
    call append(10,"# Author: GuGuiBin")
    call append(11,"#")
    call append(12,"===========================================
							\==================================*/")
    echohl WarningMsg | echo "Successful in adding the copyright." | echohl None
endf

"更新最近修改时间和文件名
function UpdateTitle()
    normal m'
    execute '/# *Last modified:/s@:.*$@\=strftime(":\t%Y-%m-%d %H:%M")@'
    normal ''
    normal mk
    execute '/# *Filename:/s@:.*$@\=":\t\t".expand("%:t")@'
    execute "noh"
    normal 'k
    echohl WarningMsg | echo "Successful in updating the copy right." | echohl None
endfunction

"判断前10行代码里面，是否有Last modified这个单词，
"如果没有的话，代表没有添加过作者信息，需要新添加；
"如果有的话，那么只需要更新即可
function TitleDet()
    let n=1
    "默认为添加
    while n < 10
        let line = getline(n)
        if line =~ '^\#\s*\S*Last\smodified:\S*.*$'
            call UpdateTitle()
            return
        endif
        let n = n + 1
    endwhile
    call AddTitle()
endfunction
"end 版权声明


" DoxygenTookit 插件配置
map <F1> : Dox<cr>
let g:DoxygenToolkit_briefTag_pre = "@brief : "
let g:DoxygenToolkit_paramTag_pre = "@param : "
let g:DoxygenToolkit_returnTag =    "@return: \<enter>* \<enter>* date  : ".strftime("%Y-%m-%d")
"let g:DoxygenToolkit_authorName="Gabe Gu"
"let g:DoxygenToolkit_licenseTag="My own license\<enter>"
"let g:DoxygenToolkit_undocTag="DOXIGEN_SKIP_BLOCK"
" let g:DoxygenToolkit_briefTag_funcName = /"no"
" let g:DoxygenToolkit_maxFunctionProtoLines = 30


